description: >
  Run cdk

parameters:
  attach_at:
    description: where should we attach the workspace
    default: "."
    type: string
  cdk-directory:
    description: the directory where your cdk.json file resides, relative to attach_at
    type: string
    default: "."
  cdk-command:
    description: the cdk command to run
    type: enum
    enum: ["diff", "deploy", "destroy"]
  cdk-params:
    description: the parameters to pass your cdk command
    type: string
    default: "--all --require-approval=never --ci --progress=events "
  aws_access_key_id:
    default: AWS_ACCESS_KEY_ID
    description: |
      AWS access key id for IAM role. Set this to the name of the environment variable you will set to hold this value, i.e. AWS_ACCESS_KEY.
    type: env_var_name
  aws_account_id:
    default: AWS_ACCOUNT_ID
    description: |
      Name of environment variable storing the Amazon account ID.
    type: env_var_name
  aws_secret_access_key:
    default: AWS_SECRET_ACCESS_KEY
    description: |
      AWS secret key for IAM role. Set this to the name of the environment variable you will set to hold this value, i.e. AWS_SECRET_ACCESS_KEY.
    type: env_var_name
  environment:
    default: ENVIRONMENT
    description: The environment to apply on.
    type: string
  notify:
    default: false
    description: whether to notify slack
    type: boolean

steps:
  - attach_workspace:
      at: << parameters.attach_at >>
  - aws-cli/setup
  - run:
      name: Run Cdk Command
      no_output_timeout: 30m
      command: |
        assume_creds=$(aws sts assume-role --role-session-name ${CIRCLE_WORKFLOW_ID} --role-arn arn:aws:iam::$AWS_ACCOUNT_ID:role/CiDeployer)
        export AWS_ACCESS_KEY_ID=$(echo $assume_creds | jq -r .Credentials.AccessKeyId)
        export AWS_SECRET_ACCESS_KEY=$(echo $assume_creds | jq -r .Credentials.SecretAccessKey)
        export AWS_SESSION_TOKEN=$(echo $assume_creds | jq -r .Credentials.SessionToken)
        cd << parameters.cdk-directory >>
        npx cdk << parameters.cdk-command >> << parameters.cdk-params >>
  - when:
      condition: <<parameters.notify>>
      steps:
        - slack/notify:
            color: '#22e33f'
            message: 'Deployed to << parameters.environment >>.'
