description: >
  rollbar notify_deploy

parameters:
  attach_at:
    description: where should we attach the workspace
    default: "."
    type: string
  environment:
    default: ENVIRONMENT
    description: The environment to apply on.
    type: string
  node_version:
    description: the version of node to use in executor
    type: string
    default: "18.13.0"

steps:
  - checkout
  - run:
      name: "Fix CIRCLE_WORKING_DIRECTORY"
      command: echo 'CIRCLE_WORKING_DIRECTORY="${CIRCLE_WORKING_DIRECTORY/#\~/$HOME}"' >> $BASH_ENV
  # - run:
  #     name: Search for Rollbar Token (grep)
  #     command: |
  #       ROLLBAR_TOKEN_FILE=$(grep -rnw "$CIRCLE_WORKING_DIRECTORY" -e 'ROLLBAR_ACCESS_TOKEN' | head -n 1 | cut -d ':' -f 1)
  #       if [[ -z "$ROLLBAR_TOKEN_FILE" ]]; then
  #         echo "ROLLBAR_ACCESS_TOKEN not found using grep";
  #       else
  #         echo "Found potential ROLLBAR_ACCESS_TOKEN file: $ROLLBAR_TOKEN_FILE";
  #         # Extract token using yq (assuming valid YAML format)
  #         export ROLLBAR_ACCESS_TOKEN=$(yq -r '.ROLLBAR_ACCESS_TOKEN' "$ROLLBAR_TOKEN_FILE")
  - run:
      name: get rollbar token
      command: |
        echo $CIRCLE_WORKING_DIRECTORY
        echo 'export ROLLBAR_ACCESS_TOKEN=$(yq -r ".defaults.rollbarToken" $CIRCLE_WORKING_DIRECTORY/config/env.yaml)' >> "$BASH_ENV"
  - run:
      name: Rollbar - Notify Deploy Succeeded
      command: |
        curl https://api.rollbar.com/api/1/deploy/ \
          --form access_token=$ROLLBAR_ACCESS_TOKEN \
          --form environment=$<< parameters.environment >> \
          --form revision=$CIRCLE_SHA1 \
          --form local_username=$CIRCLE_USERNAME
# - notify_deploy:
#     attach_at: << parameters.attach_at >>
#     environment: << parameters.environment >>
#     node_version: << parameters.node_version >>
